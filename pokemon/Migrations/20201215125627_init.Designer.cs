// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using pokemon;

namespace pokemon.Migrations
{
    [DbContext(typeof(PokemonContext))]
    [Migration("20201215125627_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("pokemon.Ability", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("MaxDmg")
                        .HasColumnType("int");

                    b.Property<int>("MinDmg")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Abilities");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            MaxDmg = 23,
                            MinDmg = 10,
                            Name = "Lightning Bolt"
                        },
                        new
                        {
                            ID = 2,
                            MaxDmg = 37,
                            MinDmg = 15,
                            Name = "Thunder"
                        },
                        new
                        {
                            ID = 3,
                            MaxDmg = 21,
                            MinDmg = 11,
                            Name = "Bubble"
                        },
                        new
                        {
                            ID = 4,
                            MaxDmg = 55,
                            MinDmg = 20,
                            Name = "Hydro Pump"
                        },
                        new
                        {
                            ID = 5,
                            MaxDmg = 24,
                            MinDmg = 11,
                            Name = "Psy beam"
                        },
                        new
                        {
                            ID = 6,
                            MaxDmg = 19,
                            MinDmg = 9,
                            Name = "Razor Leaf"
                        },
                        new
                        {
                            ID = 7,
                            MaxDmg = 57,
                            MinDmg = 16,
                            Name = "Flamethrower"
                        },
                        new
                        {
                            ID = 8,
                            MaxDmg = 52,
                            MinDmg = 17,
                            Name = "Eathquake"
                        },
                        new
                        {
                            ID = 9,
                            MaxDmg = 26,
                            MinDmg = 15,
                            Name = "Bite"
                        });
                });

            modelBuilder.Entity("pokemon.Deck", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Decks");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Standard"
                        });
                });

            modelBuilder.Entity("pokemon.Pokemon", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("HP")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrainerID")
                        .HasColumnType("int");

                    b.Property<int>("TypeID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("TrainerID");

                    b.HasIndex("TypeID");

                    b.ToTable("Pokemons");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            HP = 50,
                            Level = 22,
                            Name = "Pikachu",
                            TrainerID = 1,
                            TypeID = 1
                        },
                        new
                        {
                            ID = 2,
                            HP = 50,
                            Level = 59,
                            Name = "Blastoise",
                            TrainerID = 2,
                            TypeID = 14
                        });
                });

            modelBuilder.Entity("pokemon.Pokemon_Ability_JT", b =>
                {
                    b.Property<int>("AbilityID")
                        .HasColumnType("int");

                    b.Property<int>("PokemonID")
                        .HasColumnType("int");

                    b.HasKey("AbilityID", "PokemonID");

                    b.HasIndex("PokemonID");

                    b.ToTable("Pokemon_Ability_JTs");

                    b.HasData(
                        new
                        {
                            AbilityID = 1,
                            PokemonID = 1
                        },
                        new
                        {
                            AbilityID = 2,
                            PokemonID = 1
                        },
                        new
                        {
                            AbilityID = 3,
                            PokemonID = 2
                        },
                        new
                        {
                            AbilityID = 4,
                            PokemonID = 2
                        });
                });

            modelBuilder.Entity("pokemon.Pokemon_Deck_JT", b =>
                {
                    b.Property<int>("DeckID")
                        .HasColumnType("int");

                    b.Property<int>("PokemonID")
                        .HasColumnType("int");

                    b.HasKey("DeckID", "PokemonID");

                    b.HasIndex("PokemonID");

                    b.ToTable("Pokemon_Deck_JTs");

                    b.HasData(
                        new
                        {
                            DeckID = 1,
                            PokemonID = 1
                        },
                        new
                        {
                            DeckID = 1,
                            PokemonID = 2
                        });
                });

            modelBuilder.Entity("pokemon.Trainer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("location")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Trainers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Age = 15,
                            Name = "Ash",
                            location = "Pallet Town"
                        },
                        new
                        {
                            ID = 2,
                            Age = 17,
                            Name = "Misty",
                            location = "Anistar City"
                        },
                        new
                        {
                            ID = 3,
                            Age = 19,
                            Name = "Brook",
                            location = "Cerulean City"
                        },
                        new
                        {
                            ID = 4,
                            Age = 13,
                            Name = "Tarot",
                            location = "Cinnibar Island"
                        });
                });

            modelBuilder.Entity("pokemon.Type", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Types");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Electric"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Ground"
                        },
                        new
                        {
                            ID = 3,
                            Name = "Fire"
                        },
                        new
                        {
                            ID = 4,
                            Name = "Rock"
                        },
                        new
                        {
                            ID = 5,
                            Name = "Flying"
                        },
                        new
                        {
                            ID = 6,
                            Name = "Fighting"
                        },
                        new
                        {
                            ID = 7,
                            Name = "Bug"
                        },
                        new
                        {
                            ID = 8,
                            Name = "Ghost"
                        },
                        new
                        {
                            ID = 9,
                            Name = "Psychic"
                        },
                        new
                        {
                            ID = 10,
                            Name = "Dragon"
                        },
                        new
                        {
                            ID = 11,
                            Name = "Grass"
                        },
                        new
                        {
                            ID = 12,
                            Name = "Fairy"
                        },
                        new
                        {
                            ID = 13,
                            Name = "Dark"
                        },
                        new
                        {
                            ID = 14,
                            Name = "Water"
                        },
                        new
                        {
                            ID = 15,
                            Name = "Steel"
                        },
                        new
                        {
                            ID = 16,
                            Name = "Posion"
                        },
                        new
                        {
                            ID = 17,
                            Name = "Normal"
                        },
                        new
                        {
                            ID = 18,
                            Name = "Ice"
                        });
                });

            modelBuilder.Entity("pokemon.Pokemon", b =>
                {
                    b.HasOne("pokemon.Trainer", "Trainer")
                        .WithMany("Pokemons")
                        .HasForeignKey("TrainerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pokemon.Type", "Type")
                        .WithMany("Pokemons")
                        .HasForeignKey("TypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trainer");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("pokemon.Pokemon_Ability_JT", b =>
                {
                    b.HasOne("pokemon.Ability", "Ability")
                        .WithMany("Pokemon_Ability_JTs")
                        .HasForeignKey("AbilityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pokemon.Pokemon", "Pokemon")
                        .WithMany("Pokemon_Ability_JTs")
                        .HasForeignKey("PokemonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ability");

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("pokemon.Pokemon_Deck_JT", b =>
                {
                    b.HasOne("pokemon.Deck", "Deck")
                        .WithMany("Pokemon_Deck_JTs")
                        .HasForeignKey("DeckID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pokemon.Pokemon", "Pokemon")
                        .WithMany("Pokemon_Deck_JTs")
                        .HasForeignKey("PokemonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Deck");

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("pokemon.Ability", b =>
                {
                    b.Navigation("Pokemon_Ability_JTs");
                });

            modelBuilder.Entity("pokemon.Deck", b =>
                {
                    b.Navigation("Pokemon_Deck_JTs");
                });

            modelBuilder.Entity("pokemon.Pokemon", b =>
                {
                    b.Navigation("Pokemon_Ability_JTs");

                    b.Navigation("Pokemon_Deck_JTs");
                });

            modelBuilder.Entity("pokemon.Trainer", b =>
                {
                    b.Navigation("Pokemons");
                });

            modelBuilder.Entity("pokemon.Type", b =>
                {
                    b.Navigation("Pokemons");
                });
#pragma warning restore 612, 618
        }
    }
}
