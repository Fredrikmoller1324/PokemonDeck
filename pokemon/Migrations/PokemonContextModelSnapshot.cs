// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using pokemon;

namespace pokemon.Migrations
{
    [DbContext(typeof(PokemonContext))]
    partial class PokemonContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("pokemon.Ability", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("MaxDmg")
                        .HasColumnType("int");

                    b.Property<int>("MinDmg")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Ability");
                });

            modelBuilder.Entity("pokemon.Deck", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Deck");
                });

            modelBuilder.Entity("pokemon.Pokemon", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("HP")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrainerID")
                        .HasColumnType("int");

                    b.Property<int>("TypeID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("TrainerID");

                    b.HasIndex("TypeID");

                    b.ToTable("Pokemon");
                });

            modelBuilder.Entity("pokemon.Pokemon_Ability_JT", b =>
                {
                    b.Property<int>("AbilityID")
                        .HasColumnType("int");

                    b.Property<int>("PokemonID")
                        .HasColumnType("int");

                    b.Property<int?>("AbilityID1")
                        .HasColumnType("int");

                    b.Property<int?>("PokemonID1")
                        .HasColumnType("int");

                    b.HasKey("AbilityID", "PokemonID");

                    b.HasIndex("AbilityID1");

                    b.HasIndex("PokemonID");

                    b.HasIndex("PokemonID1");

                    b.ToTable("Pokemon_Ability_JT");
                });

            modelBuilder.Entity("pokemon.Pokemon_Deck_JT", b =>
                {
                    b.Property<int>("DeckID")
                        .HasColumnType("int");

                    b.Property<int>("PokemonID")
                        .HasColumnType("int");

                    b.Property<int?>("DeckID1")
                        .HasColumnType("int");

                    b.Property<int?>("PokemonID1")
                        .HasColumnType("int");

                    b.HasKey("DeckID", "PokemonID");

                    b.HasIndex("DeckID1");

                    b.HasIndex("PokemonID");

                    b.HasIndex("PokemonID1");

                    b.ToTable("Pokemon_Deck_JT");
                });

            modelBuilder.Entity("pokemon.Trainer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("location")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Trainer");
                });

            modelBuilder.Entity("pokemon.Type", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Type");
                });

            modelBuilder.Entity("pokemon.Pokemon", b =>
                {
                    b.HasOne("pokemon.Trainer", "Trainer")
                        .WithMany("Pokemons")
                        .HasForeignKey("TrainerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pokemon.Type", "Type")
                        .WithMany("Pokemons")
                        .HasForeignKey("TypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trainer");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("pokemon.Pokemon_Ability_JT", b =>
                {
                    b.HasOne("pokemon.Ability", null)
                        .WithMany()
                        .HasForeignKey("AbilityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pokemon.Ability", "Ability")
                        .WithMany("Pokemon_Ability_JTs")
                        .HasForeignKey("AbilityID1");

                    b.HasOne("pokemon.Pokemon", null)
                        .WithMany()
                        .HasForeignKey("PokemonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pokemon.Pokemon", "Pokemon")
                        .WithMany("Pokemon_Ability_JTs")
                        .HasForeignKey("PokemonID1");

                    b.Navigation("Ability");

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("pokemon.Pokemon_Deck_JT", b =>
                {
                    b.HasOne("pokemon.Deck", null)
                        .WithMany()
                        .HasForeignKey("DeckID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pokemon.Deck", "Deck")
                        .WithMany("Pokemon_Deck_JTs")
                        .HasForeignKey("DeckID1");

                    b.HasOne("pokemon.Pokemon", null)
                        .WithMany()
                        .HasForeignKey("PokemonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pokemon.Pokemon", "Pokemon")
                        .WithMany("Pokemon_Deck_JTs")
                        .HasForeignKey("PokemonID1");

                    b.Navigation("Deck");

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("pokemon.Ability", b =>
                {
                    b.Navigation("Pokemon_Ability_JTs");
                });

            modelBuilder.Entity("pokemon.Deck", b =>
                {
                    b.Navigation("Pokemon_Deck_JTs");
                });

            modelBuilder.Entity("pokemon.Pokemon", b =>
                {
                    b.Navigation("Pokemon_Ability_JTs");

                    b.Navigation("Pokemon_Deck_JTs");
                });

            modelBuilder.Entity("pokemon.Trainer", b =>
                {
                    b.Navigation("Pokemons");
                });

            modelBuilder.Entity("pokemon.Type", b =>
                {
                    b.Navigation("Pokemons");
                });
#pragma warning restore 612, 618
        }
    }
}
